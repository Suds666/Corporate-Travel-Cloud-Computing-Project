# api_gateway/nginx.conf

# Define groups of servers (our microservices)
# The names (auth-service, flight-service) MUST match the service names in docker-compose.yml
# The ports MUST match the ports exposed by the services' Dockerfiles/CMDs
upstream auth_service_upstream {
    server auth-service:5001;
}
upstream flight_service_upstream {
    server flight-service:5002;
}
upstream booking_service_upstream {
    server booking-service:5003;
}
upstream visa_service_upstream {
    server visa-service:5004;
}
upstream analytics_service_upstream {           
    server analytics-service:5005;
}

server {
    # This is the port the GATEWAY listens on EXTERNALLY (from the frontend/browser)
    listen 8080;
    server_name localhost; # Or your domain name

    # Increase max body size for file uploads like the visa PDF/image
    client_max_body_size 25M; # Adjust as needed

    # --- Health Check Passthrough (Optional but Useful) ---
    # Allows checking individual service health via the gateway
    location /api/auth/health {
         proxy_pass http://auth_service_upstream/health;
         # Add standard proxy headers (see below)
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/flight/health {
         proxy_pass http://flight_service_upstream/health;
          # Add standard proxy headers
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
    }
     # Add similar blocks for /api/booking/health, /api/visa/health, /api/analytics/health


    # --- API Route Definitions ---
    # These locations match the paths the frontend calls

    location /api/login {
        proxy_pass http://auth_service_upstream/api/login; # Forward to auth service's endpoint
        # Standard headers to pass client info to the backend service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header Authorization $http_authorization; # Add this later for JWT
        # proxy_pass_header Authorization; # Add this later for JWT
    }

    location /api/flights {
        proxy_pass http://flight_service_upstream/api/flights;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
         # Add Auth header pass-through later if needed
    }

    location /api/finalize-booking {
        proxy_pass http://booking_service_upstream/api/finalize-booking;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
         # Add Auth header pass-through later if needed
    }

    location /api/verify-visa {
        proxy_pass http://visa_service_upstream/api/verify-visa;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
         # Add Auth header pass-through later if needed
    }

     location /api/booking-analytics {
        proxy_pass http://analytics_service_upstream/api/booking-analytics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
         # Add Auth header pass-through later if needed
    }

    # Optional: A default location to catch unmatched paths
    # location / {
    #    return 404 "API endpoint not found.\n";
    #    add_header Content-Type text/plain;
    # }

    # Optional: Add error pages
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #    root /usr/share/nginx/html; # Default Nginx error page location
    # }
}